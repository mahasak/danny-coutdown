{"version":3,"sources":["Components/baby-newborn.svg","Components/Navigation.jsx","Components/FlipUnit.jsx","Components/FlipClock.jsx","Components/Body.jsx","Components/Footer.jsx","Components/Copyright.jsx","Components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","className","id","href","title","AnimatedCard","this","position","digit","animation","React","Component","StaticCard","FlipUnit","state","shuffle","nextProps","pre_digit","setState","now","before","FlipClock","timerID","setInterval","updateTime","clearInterval","type","count_to","units","date_to_arr","split","time_diff","Date","days","Math","floor","hours","minutes","seconds","time_now","years","getYear","months","getMonth","getDate","getHours","getMinutes","getSeconds","map","u","show_units","sep","i","key","__shuffle","Body","src","Avartar","alt","style","width","date","Footer","details","address","Copyright","App","Boolean","window","location","hostname","match","ReactDOM","render","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.49f18fbd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baby-newborn.c693aef2.svg\";","import React from 'react';\n\nexport const Navigation = (props) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg bg-secondary text-uppercase fixed-top\" id=\"mainNav\">\n            <div className=\"container\">\n              <a className=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">{props.title}</a>\n            </div>\n    </nav>\n  );\n};\n\nexport default Navigation;","import React from 'react'\n\nclass AnimatedCard extends React.Component {\n  render() {\n    const { position, digit, animation } = this.props;\n    // console.log('AnimatedCard', position, digit, animation);\n    return (\n      <div className={`flipCard ${position} ${animation}`}>\n        <span>{digit || '00'}</span>\n      </div>\n    );\n  }\n}\n\nclass StaticCard extends React.Component {\n  render() {\n    const { position, digit } = this.props;\n    // console.log('StaticCard', position, digit);\n    return (\n      <div className={position}>\n        <span>{digit || '00'}</span>\n      </div>\n    );\n  }\n}\n\nexport default class FlipUnit extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shuffle: true,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n\n    const { digit, pre_digit } = nextProps;\n\n    if (digit !== this.props.digit && digit !== pre_digit)\n      this.setState({\n        shuffle: !this.state.shuffle,\n      });\n  }\n\n  render() {\n    const { digit, pre_digit, title } = this.props;\n    // const { shuffle } = this.props;\n    const { shuffle } = this.state;\n\n    let now = digit;\n    let before = pre_digit;\n\n    // add zero\n    if (now < 10) now = `0${now}`;\n    if (before < 10) before = `0${before}`;\n\n    return (\n      <div className={'flipUnitContainer'}>\n        <StaticCard\n          position={'upperCard'}\n          digit={now}\n        />\n\n        <StaticCard\n          position={'lowerCard'}\n          digit={before}\n        />\n\n        <AnimatedCard\n          position={'first'}\n          digit={shuffle ? before : now}\n          animation={shuffle ? 'fold' : 'unfold'}\n        />\n\n        <AnimatedCard\n          position={'second'}\n          digit={!shuffle ? before : now}\n          animation={!shuffle ? 'fold' : 'unfold'}\n        />\n\n        <div className='ContainerTitle'>{title}</div>\n\n      </div>\n    );\n  }\n}","import React from 'react'\n\nimport './FlipClock.scss';\n\nimport FlipUnit from './FlipUnit'\n\n\nexport default class FlipClock extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  // \t\t--------------------------------\t\t--------------------------------\t\t---------\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.updateTime(),\n      1000\n    );\n  }\n\n  // \t\t--------------------------------\t\t--------------------------------\t\t---------\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  // \t\t--------------------------------\t\t--------------------------------\t\t---------\n\n  updateTime() {\n    const { type, count_to } = this.props;\n\n    let units = [];\n\n    if (type === 'countdown') {\n\n      var date_to_arr = count_to.split(/[^0-9]/);\n      const time_diff = (new Date(date_to_arr[0], date_to_arr[1] - 1, date_to_arr[2], date_to_arr[3], date_to_arr[4])) - (new Date());\n\n      // const time_diff =  Date.parseExact(count_to, \"YYYY-MM-DD HH:mm:ss\") - Date.parse(new Date());\n      // const time_diff = Date.parse(count_to) - Date.parse(new Date());\n\n      // console.log(count_to, Date.parse(count_to), time_diff);\n\n      units.days = time_diff > 0 ? Math.floor(time_diff / (1000 * 60 * 60 * 24)) : 0;\n      units.hours = time_diff > 0 ? Math.floor((time_diff / (1000 * 60 * 60)) % 24) : 0;\n      units.minutes = time_diff > 0 ? Math.floor((time_diff / 1000 / 60) % 60) : 0;\n      units.seconds = time_diff > 0 ? Math.floor((time_diff / 1000) % 60) : 0;\n\n    }\n    else if (type === 'clock') {\n\n      const time_now = new Date();\n\n      units.years = time_now.getYear() - 100;\n      units.months = time_now.getMonth() + 1;\n      units.days = time_now.getDate();\n      units.hours = time_now.getHours();\n      units.minutes = time_now.getMinutes();\n      units.seconds = time_now.getSeconds();\n\n    }\n\n    ['years', 'months', 'days', 'hours', 'minutes', 'seconds']\n      .map((u) => \n        // if( units[u] !== this.state[u]) {\n        this.setState({\n          [u]: units[u],\n          [`${u}_pre`]: this.state[u] || 0,\n          // [`${u}_shuf`] : !this.state[`${u}_shuf`],\n        })\n        // }\n      \n      )\n  }\n\n  // \t\t--------------------------------\t\t--------------------------------\t\t---------\n\n  render() {\n\n    const { type, units } = this.props;\n\n    const show_units = units ?\n      units\n      :\n      type === 'countdown' ?\n        [\n          {\n            type: 'days',\n            title: 'days',\n          },\n          {\n            sep: ':',\n            type: 'hours',\n            title: 'hours',\n          },\n          {\n            sep: ':',\n            type: 'minutes',\n            title: 'minutes',\n          },\n          {\n            sep: ':',\n            type: 'seconds',\n            title: 'seconds',\n          }\n        ]\n        :\n        type === 'clock' ?\n          [\n            {\n              type: 'days',\n              title: 'day',\n            },\n            {\n              type: 'hours',\n              title: 'hour',\n            },\n            {\n              sep: ':',\n              type: 'minutes',\n              title: 'minute',\n            },\n            {\n              sep: ':',\n              type: 'seconds',\n              title: 'second',\n            }\n          ]\n          :\n          null;\n\n\n    return <div className={'FlipClock'}>\n\n      {\n        show_units\n          .map((u, i) => [\n\n            i > 0 ? <div className='divider' key={'fcu-div-' + i}>{u.sep || '\\u00A0'}</div> : null\n\n            ,\n\n            <FlipUnit\n\n              title={u.title}\n\n              digit={this.state[u.type]}\n              pre_digit={this.state[`${u.type}_pre`]}\n\n              __shuffle={this.state[`${u.type}_shuf`]}\n\n\n              key={'fcu-' + i}\n\n            />\n          ]\n\n          )\n      }\n\n    </div>\n  }\n\n  // \t\t--------------------------------\t\t--------------------------------\t\t---------\n}","import React from 'react';\nimport FlipClock from './FlipClock'\nimport Avartar from './baby-newborn.svg'\nexport const Body = (props) => {\n  return (\n    <header className=\"masthead bg-primary text-white text-center\">\n      <div className=\"container d-flex align-items-center flex-column\">\n        <img className=\"masthead-avatar mb-5\" src={Avartar} alt=\"\" />\n        <h1 className=\"masthead-heading text-uppercase mb-0\">Dan Pijittum</h1>\n        <div className=\"divider-custom divider-light\">\n          <div className=\"divider-custom-line\"></div>\n          <div className=\"divider-custom-icon\"><i className=\"fas fa-star\"></i></div>\n          <div className=\"divider-custom-line\"></div>\n        </div>\n        <div style={{ width: 300 }}>\n          <FlipClock\n            type=\"countdown\"\n            count_to={props.date}\n          />\n        </div>\n      </div>\n    </header>\n  )\n}\n\n\nexport default Body;\n\n","import React from 'react';\n\nexport const Footer = (props) => {\n  return (\n    <footer className=\"footer text-center\">\n      <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col-lg-4 mb-5 mb-lg-0\">\n            <h4 className=\"text-uppercase mb-4\">Location</h4>\n            <p className=\"lead mb-0\">{props.details}<br />{props.address}</p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n\n\n","import React from 'react';\n\nexport const Copyright = (props) => {\n  return (\n    <section className=\"copyright py-4 text-center text-white\">\n      <div className=\"container\"><small>No Right Reserved</small></div>\n    </section>\n  );\n};\n\nexport default Copyright;\n\n\n","import React from 'react';\nimport { Navigation } from './Navigation'\nimport { Body } from './Body'\nimport { Footer } from './Footer'\nimport { Copyright } from './Copyright'\n\nconst App = () => {\n  return (\n    <div id=\"root\">\n      <Navigation title=\"Darwin's Delivery Countdown\" />\n      <Body date=\"2020-07-17 00:00:00\"/>\n      <Footer\n        details=\"Vibhavadi Hospital, Tel. +66 2 561 1111 \"\n        address=\"51/3, Ngam Wong Wan Rd., Lat Yao, Bangkok 10900 Thailand\"\n      />\n      <Copyright />\n    </div>\n  );\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#app')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}